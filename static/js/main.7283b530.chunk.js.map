{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pallet","useState","matrix","setMatrix","valid","num","row","col","i","parseInt","box_x","box_y","j","_solve","find","find_empty","handleChange","column","value","copy","className","map","v","style","backgroundColor","onChange","e","target","onClick","check","toast","error","success","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7283b530.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nfunction App() {\n  const pallet = {\n    '0': '#90CAF9',\n    '30': '#1DE9B6',\n    '60': '#FFAB91', \n    '3': '#D1C4E9',\n    '33': '#FFF59D',\n    '63': '#A5D6A7', \n    '6': '#80CBC4', \n    '36': '#F48FB1', \n    '66': '#81D4FA', \n  };\n\n  const [matrix, setMatrix] = useState([\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n  ]);\n\n  const find_empty = (matrix) => {\n    for (let i=0; i<9; i++) {\n      for (let j=0; j<9; j++) {\n        if (parseInt(matrix[i][j]) === 0) {\n          return [i,j];\n        }\n      }\n    }\n    return null\n  }\n\n  const valid = (matrix, num, row, col) => {\n    for (let i=0; i<9; i++) {\n      if (parseInt(matrix[row][i]) === num && col !== i) return false\n    }\n    for (let i=0; i<9; i++) {\n      if (parseInt(matrix[i][col]) === num && row !== i) return false\n    }\n\n    let box_x = parseInt(col/3)\n    let box_y = parseInt(row/3)\n\n    for (let i=box_y*3; i<box_y*3+3; i++) {\n      for (let j=box_x*3; j<box_x*3+3; j++) {\n        if (parseInt(matrix[i][j]) === num && i !== row && j !== col) return false\n      }\n    } \n\n    return true\n  }\n\n  const _solve = (matrix) => {\n    let find = find_empty(matrix)\n    if (find === null) {\n      return true;\n    } else {\n      let row = find[0]\n      let col = find[1]\n      for (let i=1; i<=9; i++) {\n        if (valid(matrix, i, row, col)) {\n          handleChange(row, col, i);\n          if (_solve(matrix)) return true\n          handleChange(row, col, 0);\n        }\n      }\n    }\n    return false\n  }\n\n  const handleChange = (row, column, value) => {\n    let copy = [...matrix];\n    copy[row][column] = + value;\n    setMatrix(copy);\n  };\n\n  const getBoxColor = (row, col) => {\n    let rowGroup = row - (row % 3);\n    let colGroup = (col - (col % 3)) * 10; \n    return pallet[rowGroup + colGroup];\n  };\n\n  const clear = () => {\n    setMatrix([\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ])\n  }\n\n  const check = (matrix) => {\n    for (let i=0; i<9; i++) {\n      for (let j=0; j<9; j++) {\n        if (parseInt(matrix[i][j]) < 0 || parseInt(matrix[i][j]) > 9) return false;\n        if (matrix[i][j] !== 0 && !valid(matrix, matrix[i][j], i, j)) return false;\n      }\n    }\n    return true;\n  }\n\n  const solve = () => {\n    if (check(matrix)) {\n      if (_solve(matrix)) {\n        toast.success(\"Successfully!\")\n      } else {\n        toast.error(\"Error!\")\n      }\n    } else {\n      toast.error(\"Invalid input!\")\n    }  \n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">   \n        <ToastContainer/>\n        <div className=\"row justify-content-center\" >\n          <h1>Sudoku solver</h1>\n        </div>\n        <div className=\"row\">\n        {matrix.map((value, i) => {\n          return <div className=\"col-md-12\" >\n            {value.map((v, j)=> {\n              return <input \n              style={{backgroundColor: getBoxColor(i, j)}}\n              value={v}\n              onChange={(e) => handleChange(i, j, e.target.value)}/>\n            })}\n          </div>\n        })}\n        </div>\n        <div className=\"row justify-content-center\">\n          <button\n            onClick={clear}\n          >\n            Clear\n          </button>\n          <button\n            className='solve'\n            onClick={solve}\n          >\n            Solve\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}